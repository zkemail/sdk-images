syntax = "proto3";

import "google/protobuf/timestamp.proto";

option go_package = "github.com/zkemail/conductor/pkg/pb/proto";

package blueprint;

enum ZkFramework {
    ZkFrameworkNone = 0;
    circom = 1;
    sp1 = 2;
    noir = 3;
}

enum BlueprintStatus {
    // Default value. If status is not set, we can use this to skip filtering for status.
    None = 0;
    Draft = 1;
    InProgress = 2;
    Done = 3; // i.e. circuits are compiled
    Failed = 4;
}

message Blueprint {
    string id = 1;
    string title = 2;
    string description = 3;
    string slug = 4;
    repeated string tags = 5;
    string email_query = 6;
    bool use_new_sdk = 7;
    string circuit_name = 8;
    bool ignore_body_hash_check = 9;
    string sha_precompute_selector = 10;
    int32 email_body_max_length = 11;
    string sender_domain = 12;
    bool enable_header_masking = 13;
    bool enable_body_masking = 14;
    ZkFramework zk_framework = 15;
    int32 verifier_contract_chain = 16;
    string verifier_contract_address = 17;
    bool is_public = 18;
    google.protobuf.Timestamp created_at = 19;
    google.protobuf.Timestamp updated_at = 20;
    repeated ExternalInput external_inputs = 21;
    repeated DecomposedRegex decomposed_regexes = 22;
    BlueprintStatus status = 23;
    int32 version = 24;
    string github_username = 25;
    int32 email_header_max_length = 26;
    bool remove_soft_linebreaks = 27;
    int32 stars = 28;
    int32 ptau = 29;
    int32 num_local_proofs = 30;
}

message ExternalInput {
    string name = 3;
    int32 max_length = 4;
}

message DecomposedRegex {
    string name = 3;
    int32 max_length = 4;
    string location = 5;
    bool is_hashed = 6;
    repeated DecomposedRegexPart parts = 7;
}

message DecomposedRegexPart {
    optional bool is_public = 3;
    string regex_def = 4;
}
